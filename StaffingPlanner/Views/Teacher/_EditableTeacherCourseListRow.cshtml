@using StaffingPlanner.ViewModels
@model TeacherCourseViewModel
    
<tr>
    <td><a href="#" data-toggle="modal" data-target="#course-modal">@Html.ActionLink(Model.CourseName, "CourseDetails", "Course", new {id = Model.OfferingId}, null)</a></td>
    <td>@Model.Code</td>
    <td>@Html.ActionLink(Model.CourseResponsible.Name, "TeacherDetails", "Teacher", new {id = Model.CourseResponsible.Id}, null)</td>
    <td>@Model.TermYear.ToString()</td>
    <td>@Model.Period</td>
    <td>@Model.TotalHours</td>
    <td>@Model.AllocatedHours</td>
    <td>
        <input type="text" id="@Model.WorkloadId" style="border:none; display: inline-block; height: 100%; width: 50%" class="hours" value="@Model.TeacherAssignedHours">           
        <div style="display: inline-block; float: right;">
            <button class="btn btn-default save-button" data-toggle="tooltip" title="Save Changes" type="button" onclick="FuckingSaveEdit(this)" data-offering="@Model.OfferingId" data-workload="@Model.WorkloadId" data-teacher="@Model.TeacherId">save</button>
            <span class="fa fa-remove" style="font-size:23px;color:rgb(149,148,148);cursor: pointer" data-toggle="tooltip" title="Cancel Changes" onclick="DiscardEdit()"></span>
        </div>
    </td>
    <td><span class="label label-@Model.CourseStatus pull-right">@Model.CourseState </span></td>
</tr>

<script>
    function SaveEdit() {
        alert("hello");
    }
    function FuckingSaveEdit(elem) {
        var teacherId = $(elem).data('teacher');
        var offeringId = $(elem).data('offering');
        var workloadId = $(elem).data('workload');
        var hours = $('#' + workloadId).val();
        console.log(hours);
        $.ajax({
            type: "POST",
            url: '@Url.Action("AlterTeacherAllocation", "Teacher")',
            contentType: "application/json",
            data: JSON.stringify({
                teacherId: teacherId,
                offeringId: offeringId,
                workloadId: workloadId,
                hours: hours
            }),
            dataType: "json",
            success: function() {
                console.log("success");
                location.reload();
            },
            error: function() {
                console.log("error");
                location.reload();
            }
        });
    }

    function GetHours() {
        return $('#teacherHours').text();
    }

    function DiscardEdit() {
        location.reload(false);
    }
</script>
